// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Admin         Admin[]
}

model Admin {
  User   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Listing {
  id                Int      @id @default(autoincrement())
  reverbId          String?
  reverbSku         String?
  reverbSelfLink    String?
  reverbImgImported Boolean? @default(false)
  title             String
  make              String?
  model             String?
  submodel          String?
  year              String?
  finish            String?
  description       String
  condition         String?
  categories        String[]
  price             Int
  salePrice         Int?
  cost              Int?
  photos            String[]
  slug              String
  isSold            Boolean  @default(false)
  isFeatured        Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())
  orderId           Int?
  Order             Order?   @relation(fields: [orderId], references: [id])
}

model Order {
  id                   Int       @id @default(autoincrement())
  BillingAddress       String
  BillingAddress2      String
  BillingCity          String
  BillingState         String
  BillingZip           String
  BillingCountry       String
  BillingPhone         String
  BillingEmail         String
  BillingFirstName     String
  BillingLastName      String
  BillingCompanyName   String
  ShippingAddress      String
  ShippingAddress2     String
  ShippingCity         String
  ShippingState        String
  ShippingZip          String
  ShippingCountry      String
  ShippingPhone        String
  ShippingEmail        String
  ShippingFirstName    String
  ShippingLastName     String
  ShippingCompanyName  String
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @default(now())
  Listing              Listing[]
  squareIdempotencyKey String?
}
